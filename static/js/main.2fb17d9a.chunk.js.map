{"version":3,"sources":["components/Toolbar.tsx","utils.js","components/ProductCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["icon","fontSize","checkedIcon","useStyles","makeStyles","theme","createStyles","toolbar","backgroundColor","palette","primary","main","color","common","white","padding","spacing","marginTop","autocomplete","textField","search","position","borderRadius","shape","fade","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","deliveryTime","label","value","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","Toolbar","styles","products","setIsFiltered","setFilteredProducts","classes","useState","setSearch","filterStyles","setFilterStyles","filterDeliveries","setFilterDeliveries","useEffect","filtered","isFiltered","filter","p","name","toLowerCase","includes","length","cp","furniture_style","some","r","dt","Container","maxWidth","className","Grid","container","direction","item","xs","InputBase","placeholder","onChange","e","root","input","inputProps","justify","Autocomplete","multiple","id","event","options","autoHighlight","disableCloseOnSelect","renderOption","option","selected","Checkbox","style","marginRight","checked","renderInput","params","TextField","variant","fullWidth","map","v","getOptionLabel","marginLeft","formattingOptions","thousand","precision","decimal","card","flexDirection","border","grey","title","fontWeight","typography","fontWeightBold","margin","cardMedia","paddingTop","cardContent","flexGrow","ProductCard","amount","product","sm","Card","CardContent","Typography","gutterBottom","component","price","currencyFormatter","format","description","split","splice","join","align","delivery_time","loader","top","left","cardGrid","initProducts","initStyles","App","setStyles","loading","setLoading","error","setError","setProducts","filteredProducts","axios","get","then","data","furniture_styles","Number","catch","currentProducts","CssBaseline","CircularProgress","size","Alert","severity","idx","key","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2fb17d9a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ToolbarMUI from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { createStyles, fade, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    toolbar: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      padding: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n    autocomplete: {\n      padding: theme.spacing(3),\n    },\n    textField: {\n      backgroundColor: theme.palette.common.white,\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      width: '100%',\n      fontSize: '3em',\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '2em',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      fontSize: '2em',\n      color: theme.palette.common.white,\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n    },\n  }),\n);\n\nconst deliveryTime = [\n  { label: '1 Week', value: '7' },\n  { label: '2 Week', value: '14' },\n  { label: '1 Month', value: '30' },\n  { label: 'More than a month', value: 'moreThanAMonth' },\n];\n\ninterface ElevationScrollProps {\n  window?: () => Window;\n  children: React.ReactElement;\n}\n\ninterface ToolbarProps {\n  products: any[];\n  styles: string[];\n  setIsFiltered(isFiltered: any): any;\n  setFilteredProducts(filtered: any): any;\n}\n\nfunction ElevationScroll(props: ElevationScrollProps) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst Toolbar = (props: ToolbarProps) => {\n  const { styles, products, setIsFiltered, setFilteredProducts } = props;\n  const classes = useStyles();\n  const [search, setSearch] = useState('');\n  const [filterStyles, setFilterStyles] = useState<string[]>([]);\n  const [filterDeliveries, setFilterDeliveries] = useState<any[]>([]);\n\n  useEffect(() => {\n    let filtered = products;\n    let isFiltered = false;\n    if (search) {\n      filtered = filtered.filter((p: any) =>\n        p.name.toLowerCase().includes(search.toLowerCase()),\n      );\n      isFiltered = true;\n    }\n    if (filterStyles.length > 0) {\n      filtered = filtered.filter((cp: any) =>\n        cp.furniture_style.some((r: string) => filterStyles.includes(r)),\n      );\n      isFiltered = true;\n    }\n    if (filterDeliveries.length > 0) {\n      filtered = filtered.filter((p: any) => {\n        return filterDeliveries.includes(p.dt);\n      });\n      isFiltered = true;\n    }\n    setIsFiltered(isFiltered);\n    setFilteredProducts(filtered);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterDeliveries, filterStyles, search]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <ElevationScroll>\n        <ToolbarMUI className={classes.toolbar}>\n          <Grid container direction=\"row\">\n            <Grid item xs={6} className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search Furniture\"\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setSearch(value);\n                }}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </Grid>\n            <Grid container alignItems=\"center\" justify=\"center\">\n              <Grid item xs={6}>\n                <Autocomplete\n                  multiple\n                  id=\"furniture-styles\"\n                  onChange={(event, value) => {\n                    setFilterStyles(value);\n                  }}\n                  options={styles}\n                  autoHighlight\n                  disableCloseOnSelect\n                  renderOption={(option, { selected }) => (\n                    <Grid container justify=\"space-between\">\n                      {option}\n                      <Checkbox\n                        icon={icon}\n                        checkedIcon={checkedIcon}\n                        style={{ marginRight: 8 }}\n                        checked={selected}\n                      />\n                    </Grid>\n                  )}\n                  className={classes.autocomplete}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Furniture Styles\"\n                      placeholder=\"Furniture Styles\"\n                      fullWidth\n                      className={classes.textField}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Autocomplete\n                  multiple\n                  id=\"\"\n                  options={deliveryTime}\n                  onChange={(event, value) => {\n                    setFilterDeliveries(value.map((v: any) => v.value));\n                  }}\n                  disableCloseOnSelect\n                  autoHighlight\n                  getOptionLabel={(option) => option.label}\n                  renderOption={(option, { selected }) => (\n                    <Grid container justify=\"space-between\">\n                      {option.label}\n                      <Checkbox\n                        icon={icon}\n                        checkedIcon={checkedIcon}\n                        style={{ marginLeft: 8 }}\n                        checked={selected}\n                      />\n                    </Grid>\n                  )}\n                  className={classes.autocomplete}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Delivery Time\"\n                      placeholder=\"Delivery Time\"\n                      fullWidth\n                      className={classes.textField}\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </ToolbarMUI>\n      </ElevationScroll>\n      <ToolbarMUI />\n    </Container>\n  );\n};\n\nexport default Toolbar;\n","import currencyFormatter from 'currency-formatter';\n\nconst formattingOptions = {\n  thousand: '.',\n  precision: 0,\n  decimal: ',',\n};\n\nexport function unFormatNumber(inputValue) {\n  return currencyFormatter.unformat(inputValue, formattingOptions);\n}\n\nexport function formatNumber(amount) {\n  return `${currencyFormatter.format(amount, formattingOptions)}`;\n}\n\nexport function formatRupiah(amount) {\n  return `Rp ${currencyFormatter.format(amount, formattingOptions)}`;\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { formatRupiah } from '../utils';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      border: `2px solid ${theme.palette.grey[400]}`,\n      borderRadius: theme.shape.borderRadius,\n    },\n    title: {\n      fontWeight: theme.typography.fontWeightBold,\n      margin: theme.spacing(2, 0),\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n  }),\n);\n\ninterface Props {\n  product: any;\n}\n\nconst ProductCard = (props: Props) => {\n  const classes = useStyles();\n  const { product } = props;\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Grid container justify=\"space-between\" className={classes.title}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {product.name}\n            </Typography>\n            <Typography gutterBottom variant=\"subtitle1\">\n              {formatRupiah(product.price)}\n            </Typography>\n          </Grid>\n          <Typography gutterBottom>\n            {product.description\n              .split('')\n              .splice(0, 115)\n              .join('')}\n          </Typography>\n          <Typography>{product.furniture_style.join(', ')}</Typography>\n          <Typography align=\"right\">\n            Delivery {product.delivery_time} Days\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ProductCard;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Toolbar from './components/Toolbar';\nimport ProductCard from './components/ProductCard';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    loader: {\n      position: 'absolute',\n      top: '40%',\n      left: '50%',\n    },\n    cardGrid: {\n      padding: theme.spacing(0, 3),\n    },\n  }),\n);\n\nconst initProducts = [\n  {\n    name: 'Sofa L Jobi',\n    description:\n      'Selama Anda dapat berkumpul bersama keluarga dan orang-orang terdekat, duduk di manapun mungkin rasanya tidak menjadi masalah untuk Anda. Akan tetapi, dengan berkumpul bersama menggunakan Jobi L Sofa, suasana quality time Anda akan terasa 180 derajat perubahannya.',\n    furniture_style: ['Classic', 'Midcentury'],\n    delivery_time: '14',\n    price: 5000000,\n    dt: '14',\n  },\n  {\n    name: 'Sofa L Vienna',\n    description:\n      'Apapun kegiatan ataupun peran Anda dalam kehidupan berumah tangga, setiap orang membutuhkan tempat nyaman untuk sejenak mengambil napas. Biarkanlah Wina L Sofa menjadi tempat Anda untuk sepenuhnya melupakan segala kesibukan dan hiruk-pikuk keseharian.',\n    furniture_style: ['Midcentury', 'Contemporary'],\n    delivery_time: '2',\n    price: 7999000,\n    dt: '2',\n  },\n  {\n    name: 'Sofa L Arsa Wooden Leg',\n    description:\n      \"Arsa 'L' Sofa dengan kaki kayu adalah gabungan dari sofa 2 seater dan 1 sofa memanjang yang cocok ditaruh ditengah maupun dipojok ruangan anda. Keseluruhan sofa didominasi oleh bantalan dengan busa khusus indoor dengan aksen kaki kayu. Cushion isi dacron yang ditambahkan pada sandaran punggung sofa menambah kenyamanan. Jangan heran bila Anda mudah terlelap di atas sofa ini.\",\n    furniture_style: ['Scandinavian', 'Modern'],\n    delivery_time: '7',\n    price: 9499000,\n    dt: '7',\n  },\n  {\n    name: 'Sofa L Helena',\n    description:\n      'Bagaimana pun style dekorasi hunian, pemilihan warna netral seperti hitam dan putih tak pernah salah. Warna ini dapat berbaur dengan cantik dan memberikan keseimbangan tampilan agar rumah tetap terlihat elegan. Bagi Anda yang menyukai sentuhan warna monokrom pada furnitur, Helena L Sofa tak boleh dilewatkan.',\n    furniture_style: ['Modern', 'Contemporary'],\n    delivery_time: '2',\n    price: 7499000,\n    dt: '2',\n  },\n  {\n    name: 'Forbyta Sofa Bed',\n    description:\n      'Menikmati waktu liburan sambil bersantai memang paling pas dilakukan di rumah. Suasana rumah yang nyaman dan tenang akan membuat liburan semakin sempurna. Waktu santai di rumah akan membuat tubuh semakin rileks bila disempurnakan dengan furnitur yang pas. Forbyta Sofa Bed hadir sebagai penyempurna waktu santai Anda di rumah.',\n    furniture_style: ['Midcentury'],\n    delivery_time: '28',\n    price: 8999000,\n    dt: '28',\n  },\n  {\n    name: 'Sofa Bed Acronap',\n    description:\n      'Menikmati waktu liburan sambil bersantai memang paling pas dilakukan di rumah. Suasana rumah yang nyaman dan tenang akan membuat liburan semakin sempurna. Waktu santai di rumah akan membuat tubuh semakin rileks bila disempurnakan dengan furnitur yang pas. Forbyta Sofa Bed hadir sebagai penyempurna waktu santai Anda di rumah.',\n    furniture_style: ['Classic'],\n    delivery_time: '1',\n    price: 4999000,\n    dt: '1',\n  },\n  {\n    name: 'Sofa L Wina',\n    description:\n      'Apapun kegiatan ataupun peran Anda dalam kehidupan berumah tangga, setiap orang membutuhkan tempat nyaman untuk sejenak mengambil napas. Biarkanlah Wina L Sofa menjadi tempat Anda untuk sepenuhnya melupakan segala kesibukan dan hiruk-pikuk keseharian.',\n    furniture_style: ['Scandinavian'],\n    delivery_time: '12',\n    price: 8999000,\n    dt: '12',\n  },\n];\n\nconst initStyles = [\n  'Classic',\n  'Midcentury',\n  'Scandinavian',\n  'Modern',\n  'Contemporary',\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [styles, setStyles] = useState<string[]>(initStyles);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [products, setProducts] = useState(initProducts);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get('http://www.mocky.io/v2/5c9105cb330000112b649af8')\n      .then(({ data }) => {\n        setStyles(data.furniture_styles);\n        setProducts(\n          data.products.map((p: any) => {\n            return {\n              ...p,\n              dt:\n                Number(p.delivery_time) > 30\n                  ? 'moreThanAMonth'\n                  : p.delivery_time,\n            };\n          }),\n        );\n        setLoading(false);\n      })\n      .catch((e) => {\n        setError(\n          'Error load data from API, data used for this app from local variables instead',\n        );\n        setLoading(false);\n      });\n  }, []);\n\n  const currentProducts = isFiltered ? filteredProducts : products;\n\n  return (\n    <>\n      <CssBaseline />\n      <Toolbar\n        products={products}\n        styles={styles}\n        setIsFiltered={(isFiltered) => setIsFiltered(isFiltered)}\n        setFilteredProducts={(filtered) => setFilteredProducts(filtered)}\n      />\n      <main>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {loading ? (\n              <CircularProgress size={100} className={classes.loader} />\n            ) : (\n              <>\n                {error && <Alert severity=\"error\">{`${error}`}</Alert>}\n                {currentProducts.map((product, idx) => (\n                  <ProductCard key={idx} product={product} />\n                ))}\n              </>\n            )}\n          </Grid>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}